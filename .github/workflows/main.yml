name: Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      id-token: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js (for semantic-release)
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies for semantic-release
      run: |
        npm install -g semantic-release @semantic-release/changelog @semantic-release/git

    - name: Determine the next version
      id: determine-version
      run: |
        VERSION=$(npx semantic-release --dry-run | grep "next release version" | awk '{print $NF}')
        if [ -z "$VERSION" ]; then
          echo "Error: VERSION is empty"
          exit 1
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Docker Image
      run: |
        docker build -t peto2505/website:${{ env.VERSION }} .
        docker images
        docker push peto2505/website:${{ env.VERSION }}

    - name: Update Changelog and Commit
      run: |
        git pull --rebase
        npx semantic-release changelog
        git add CHANGELOG.md
        git commit -m "chore(release): update changelog [skip ci]" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
